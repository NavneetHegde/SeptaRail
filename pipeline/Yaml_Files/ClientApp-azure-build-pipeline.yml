trigger:
  branches:
    exclude:
      - '*'
    include:
      - 'release/*'

pr:  
  branches:
   include:
     - release/*
 
  paths:
   include:
     - 'src/ClientApp/*'
   exclude:
     - README.md

  drafts: false

pool:
  vmImage: macos-latest
  demands: xcode

variables:
  buildConfiguration: 'Release' 

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      packageType: sdk
      version: '8.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet
      includePreviewVersions: true # Required for preview versions

  - task: CmdLine@2
    displayName: 'Install Maui Workload'
    inputs:
      script: 'dotnet workload install maui'

  - task: InstallAppleCertificate@2
    displayName: 'Install Apple P12 Cert'
    inputs:
      certSecureFile: 'Certificates.p12'
      certPwd: '$(p12CertPWD)'
      keychain: 'temp'

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install Apple Provisioning Profile'
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'navneethegdeseptarail.mobileprovision'

  - task: DotNetCoreCLI@2
    displayName: 'Build the iOS Binaries'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/ClientApp.sln'
      arguments: '-f:net8.0-ios -c:Release /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false'
      zipAfterPublish: false

  - task: CopyFiles@2
    displayName: 'Copy file from Build to Staging'
    inputs:
      SourceFolder: '$(Agent.BuildDirectory)'
      Contents: '**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      OverWrite: true 

  - task: PublishBuildArtifacts@1
    displayName: 'Publish the Staging Files.'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

