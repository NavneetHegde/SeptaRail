trigger:
  branches:
    exclude:
      - '*'
    include:
      - 'release/*'

pr:  
  branches:
   include:
     - release/*
 
  paths:
   include:
     - 'src/GetTrainsFunction/*'
   exclude:
     - README.md

  drafts: false

pool:
  vmImage: windows-latest


variables:
  buildConfiguration: 'Release' 


steps:
  - task: UseDotNet@2
    inputs:
      version: '8.x'
      includePreviewVersions: true # Required for preview versions

  - script: git fetch --unshallow
    displayName: 'Fetch Full History'

  - task: CmdLine@2
    displayName: 'Install GitVersion'
    inputs:
      script: 'dotnet tool install --global GitVersion.Tool --version 5.10.0'

  - task: CmdLine@2
    displayName: 'Generate Version'
    inputs:
      script: 'dotnet-gitversion /output buildserver /updateprojectfiles /overrideconfig assembly-versioning-format="{Major}.{Minor}.{Patch}.{env:BUILD_NUMBER ?? 0}" /nofetch'


  - task: DotNetCoreCLI@2
    displayName: 'Build and Publish'
    inputs:
      command: publish
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      projects: 'src/GetTrainsFunction/GetTrainsFunction.csproj'
      publishWebProjects: false
      modifyOutputPath: false
      zipAfterPublish: false

  - task: DotNetCoreCLI@2
    displayName: 'Run xUnit tests with code coverage'
    inputs:
      command: test
      projects: 'test/GetTrainsFunction.Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'
      publishTestResults: true


  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage report'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

  - task: AzureFunctionApp@2
    displayName: 'Deploy Az Function'
    inputs:
      connectedServiceNameARM: 'Pay-As-You-Go(02f0931f-cb91-490a-b447-81f5b3e6f79e)'
      appType: 'functionApp'
      appName: 'GetTrainFunction'
      package: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/*.zip'
      deploymentMethod: 'auto'